pipeline {

  agent any

  stages {
    stage('3984565a-OP-S1') {
      steps {
        sh '''
          docker rmi -f uatsvr_image:latest
          docker commit 3984565a_uatsvr uatsvr_image:latest
          
          puppet resource package git ensure=present
          puppet resource file /tmp/3984565a/research ensure=absent force=true
          puppet resource file /tmp/3984565a ensure=absent force=true
          puppet resource file /tmp/3984565a ensure=directory
          puppet resource file /tmp/3984565a/research ensure=directory
          cd /tmp/3984565a/research
          git clone https://github.com/HelloRave/3984565a_op_repo.git

          target=3984565a_uatsvr.localdomain
          locate_script='/tmp/3984565a/research/3984565a_op_repo/3984565a_script'
          bolt script run $locate_script -t $target -u clientadm -p user123 --no-host-key-check --run-as root
          
          echo '3984565a_OP_S1: uat web server is backup and updated'
        '''
      }
    }

    stage('3984565a-OP-S2') {
      steps {
        sh '''
          curl –Is http://localhost:32500|head –n 1  > /tmp/uatsvr-result-file
        '''
        script {
          def result = sh(script: 'cat /tmp/uatsvr-result-file', returnStdout: true).trim()
          echo "Result: ${result}"
          if (result ==~ /HTTP\/1.1  200 OK/) {
            echo '3984565a_OP_S2: uat svr is running'
          } else {
            echo '3984565a_OP_S2: uat svr fails'
          }
        }
      }
    }

    stage('3984565a-OP-S3') {
      steps {
        echo '3984565a_OP_S3: Proceed stress test uat web server?'
        input(
          message: 'Proceed with stress test on uat web server or Abort (for uat svr fails)?',
          ok: 'Proceed with stress test on uat web server'
        )
      }
    }

    stage('3984565a-OP-S4') {
      steps {
        echo '3984565a_OP_S4: Stress test result is good'
      }
    }

    stage('3984565a-OP-S5') {
      steps {
        echo '3984565a_OP_S5: Deploy new update to prod web server?'
        input(
          message: 'Proceed to update prod web server or Abort (for stress test fails)?',
          ok: 'Proceed to update prod web server'
        )
      }
    }

    stage('3984565a-OP-S6') {
      steps {
        sh '''
          docker rmi -f prodsvr_image:latest
          docker commit 3984565a_prodsvr prodsvr_image:latest

          pwd
          target=3984565a_prodsvr.localdomain
          locate_script='/tmp/3984565a/research/3984565a_op_repo/3984565a_script'
          bolt script run $locate_script -t $target -u clientadm -p user123 --no-host-key-check --run-as root

          echo '3984565a_OP_S6: prod web server is backup and updated'
        '''
      }
    }

    stage('3984565a-OP-S7') {
      steps {
        sh '''
          curl –Is http://localhost:32600|head –n 1  > /tmp/prodsvr-result-file
        '''
        script {
          def result = sh(script: 'cat /tmp/prodsvr-result-file', returnStdout: true).trim()
          echo "Result: ${result}"
          if (result ==~ /HTTP\/1.1  200 OK/) {
            echo '3984565a_OP_S7: Production website is operational'
          } else {
            def action = input(
              message: 'Action',
              parameters: [
                choice(name: '', choices: ['Trigger roll back',  'Troubleshooting'])
              ]
            )
            if (action == 'Trigger roll back') {
              echo '3984565a_OP-S7: Production website is rolling back'
            } else {
              echo '3984565a_OP-S7: Troubleshooting of Production website is in progress'
            }
          }
        }
      }
    }
  }

}
